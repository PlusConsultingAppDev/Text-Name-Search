{"version":3,"file":"manage-toolbar.component.js","sourceRoot":"","sources":["../../../../modules/manage/src/manage-toolbar.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Inject, Input, ViewChild, OnInit, AfterViewInit, OnChanges, SimpleChanges, ElementRef } from '@angular/core';\r\nimport { ManageComponent } from './manage.component';\r\nimport { ActionItem } from './models';\r\nimport { ModalComponent } from '@iframework/forms';\r\n\r\n@Component({\r\n    selector: 'is-managetoolbar',\r\n    template: `\r\n    <div *ngIf=\"!isMobile\" class=\"row\">\r\n        <div class=\"col-12 actions-header\">\r\n            <div *ngIf=\"title\" class=\"pull-left\"><h4 [innerHTML]=\"title\"></h4></div>\r\n            <div class=\"pull-right\">\r\n                <div class=\"btn-group\" role=\"toolbar\">\r\n                    <button type=\"button\" class=\"btn btn-toolbar\" (click)=\"toggleSearch()\"><i class=\"fa fa-search\" aria-hidden=\"true\"></i></button>\r\n                    <a *ngIf=\"gridAction\" class=\"btn btn-toolbar\" (click)=\"addRow()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></a>\r\n                    <a *ngIf=\"!actionItems && addRoute\" class=\"btn btn-toolbar\" [routerLink]=\"[addRoute]\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></a>\r\n                    <div *ngIf=\"actionItems\"  class=\"btn-group\">\r\n                        <button type=\"button\" class=\"btn-group dropdown-toggle btn btn-toolbar dropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            <i [ngClass]=\"{'fa': true, 'fa-plus': !hasActions, 'fa-tasks': hasActions}\" aria-hidden=\"true\"></i>\r\n                            <span class=\"caret\"></span>\r\n                        </button>\r\n                        <ul class=\"dropdown-menu dropdown-menu-right\">\r\n                            <li *ngFor=\"let action of actionItems\"><a class=\"clickable\" (click)=\"action.click($event)\">{{ action.label }}</a></li>\r\n                        </ul> \r\n                    </div>\r\n                    <div class=\"btn-group\">\r\n                        <button type=\"button\" class=\"btn btn-toolbar dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            <i class=\"fa fa-cog\" aria-hidden=\"true\"></i>\r\n                            <span class=\"caret\"></span>\r\n                        </button>\r\n                        <ul class=\"dropdown-menu dropdown-menu-right\">\r\n                            <li><a class=\"clickable\" (click)=\"csvExport()\">Export to CSV</a></li>\r\n                            <li role=\"separator\" class=\"divider\"></li>\r\n                            <li class=\"clickable\"><a (click)=\"sizeToFit()\">Size to Fit</a></li>\r\n                            <li role=\"separator\" class=\"divider\"></li>\r\n                            <li class=\"clickable\"><a (click)=\"clearFilter()\">Clear All Filters</a></li>\r\n                            <li role=\"separator\" class=\"divider\"></li>\r\n                            <li  class=\"clickable\"><a (click)=\"openDual()\"><b>Customize Columns</b></a></li>\r\n                            <ng-template ngFor let-column [ngForOf]=\"columns\">\r\n                                <li *ngIf=\"columns.length <= 15 && column.headerName != ''\"><a>\r\n                                <div><is-checkbox (click)=\"setColumnVisibility($event, column.field)\" layout=\"vertical\" [value]=\"column.field\" [(ngModel)]=\"visibleColumns\">{{ column.headerName }}</is-checkbox></div>\r\n                                </a></li>\r\n                            </ng-template>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"pull-right\" [ngStyle]=\"{'padding-right':'10px', 'visibility': hideFilter ? 'hidden' : 'visible'}\">\r\n                <input #filter type=\"text\" class=\"form-control\" placeholder=\"Filter results\" (input)=\"onFilterChanged($event)\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n\t<div *ngIf=\"isMobile\" class=\"row\">\r\n        <div class=\"col-12 actions-header\">\r\n            <div class=\"pull-right\">\r\n                <div class=\"btn-group\" role=\"toolbar\">\r\n                    <a class=\"btn btn-toolbar\" [routerLink]=\"[addRoute]\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></a>\r\n                </div>\r\n            </div>\r\n            <div class=\"pull-right\" style=\"padding-right:10px\">\r\n                <input #filter type=\"text\" class=\"form-control\" placeholder=\"Filter results\" (input)=\"onFilterChanged($event)\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n\t`,\r\n    exportAs: 'isManageToolbar'\r\n})\r\n\r\nexport class ManageToolbarComponent implements OnInit, AfterViewInit, OnChanges {\r\n\r\n    @Input() actionItems: ActionItem[];\r\n    @Input() id: string;\r\n    @Input() addRoute: string;\r\n    @Input() gridAction: boolean;\r\n    @Input() visibleColumns: string[] = [];\r\n    @Input() columns: any[] = [];\r\n    @Input() title: string;\r\n    @ViewChild('filter') filter: ElementRef;\r\n\r\n    public isMobile: boolean;\r\n    public hideFilter: boolean = true;\r\n    public hasActions: boolean;\r\n    private _el: HTMLInputElement;\r\n\r\n    constructor(@Inject(ManageComponent) private _parent: ManageComponent) { }\r\n\r\n    ngOnInit() {\r\n        this.isMobile = window.isMobile();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this._el = this.filter.nativeElement;\r\n\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes[\"actionItems\"]) {\r\n            this.hasActions = !Array.isEmpty(this.actionItems);\r\n        }\r\n        if (changes[\"columns\"] && changes[\"columns\"].currentValue) {\r\n            this.columns.sort((x, y) => {\r\n                if (x.headerName > y.headerName) {\r\n                    return 1;\r\n                } else if (x.headerName < y.headerName) {\r\n                    return -1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    public openDual() {\r\n        if (this.columns.length > 15) {\r\n            this._parent.columnsmodal.show();\r\n        }\r\n    }\r\n\r\n    public toggleSearch() {\r\n        this.hideFilter = !this.hideFilter;\r\n        this.filter.nativeElement.value = \"\";\r\n        if (!this.hideFilter) { setTimeout(() => { this._el.focus(); }, 5); }\r\n    }\r\n\r\n    public addRow() {\r\n        this._parent.addRows();\r\n    }\r\n\r\n    public csvExport() {\r\n        let params = {\r\n            skipHeader: false, skipFooters: false, skipGroups: false, allColumns: false, onlySelected: false, fileName: \"export.csv\", columnSeparator: \",\",\r\n            processCellCallback: (params: any) => {\r\n                if (params.column.colDef.fileName != \"\") {\r\n                    if (params.column.colDef.cellRenderer) {\r\n                        return params.column.colDef.cellRenderer(params);\r\n                    }\r\n                    else { return params.value; }\r\n                } else {\r\n                    return null;\r\n                }\r\n            }\r\n        };\r\n        this._parent.gridOptions.api && this._parent.gridOptions.api.exportDataAsCsv(params);\r\n    }\r\n\r\n    public clearFilter() {\r\n        this._parent.get();\r\n    }\r\n\r\n    public sizeToFit() { this._parent.sizeToFit(); }\r\n\r\n    public setColumnVisibility(e: MouseEvent, columnHeader: any) {\r\n        e.stopImmediatePropagation();\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        let state = this._parent.gridOptions.columnApi && this._parent.gridOptions.columnApi.getColumnState().find(x => x.colId == columnHeader);\r\n        this._parent.gridOptions.columnApi && this._parent.gridOptions.columnApi.setColumnVisible(columnHeader, state.hide);\r\n        this._parent.updateColumnVisibility();\r\n        this.sizeToFit();\r\n    }\r\n\r\n    public onFilterChanged(e: Event) { this._parent.gridOptions.api && this._parent.gridOptions.api.setQuickFilter((<HTMLInputElement>e.target).value); }\r\n}"]}