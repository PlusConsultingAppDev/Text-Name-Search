{"version":3,"file":"manage.service.js","sourceRoot":"","sources":["../../../../modules/manage/src/manage.service.ts"],"names":[],"mappings":"AAEA,IAAA;IAII,uBAAoB,UAAoB;QAApB,eAAU,GAAV,UAAU,CAAU;QACpC,IAAI,CAAC,UAAU,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;KAC1C;IAiBS,mCAAW,GAArB,UAAsB,IAAY,EAAE,EAAO,EAAE,WAAqB;QAC9D,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC;QACxC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACzC,MAAM,IAAI,IAAI,CAAC;SAClB;QACD,IAAI,CAAC,CAAC;YACF,MAAM,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;SAChC;QACD,MAAM,CAAC,MAAM,CAAC;KACjB;wBAlCL;IAmCC,CAAA;AAjCD,yBAiCC","sourcesContent":["import { IManageService, ColData } from './models';\r\n\r\nexport abstract class ManageService implements IManageService {\r\n\r\n    protected endPoint: string;\r\n\r\n    constructor(private _idNumeric?: boolean) {\r\n        this.rowActions = [\"update\", \"delete\"];\r\n    }\r\n\r\n    public id: string;\r\n    public dataColumns: ColData[];\r\n    public rowActions: string[];\r\n    public addRoute: string;\r\n    public editRoute: string;\r\n    public gridAction: boolean;\r\n    public mainActions: string[];\r\n    public listCriteria: any;\r\n\r\n    abstract get(...args: any[]): any;\r\n    abstract getById(...args: any[]): any;\r\n    abstract add(...args: any[]): any;\r\n    abstract delete(...args: any[]): any;\r\n    abstract update(...args: any[]): any;\r\n\r\n    protected getEndPoint(path: string, id: any, ignoreEmpty?: boolean) {\r\n        let result = this.endPoint + \"/\" + path;\r\n        if (!id && this._idNumeric && !ignoreEmpty) {\r\n            result += \"/0\";\r\n        }\r\n        else {\r\n            result += id ? \"/\" + id : \"\";\r\n        }\r\n        return result;\r\n    }\r\n}"]}