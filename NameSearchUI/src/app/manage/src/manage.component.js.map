{"version":3,"file":"manage.component.js","sourceRoot":"","sources":["../../../../modules/manage/src/manage.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, Output, EventEmitter, OnInit, AfterViewInit, HostListener, ElementRef, HostBinding, ViewChild, Type } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GridOptions, ColDef, RowNode, Column, InMemoryRowModel } from 'ag-grid/main';\r\nimport { TranslatorService } from '@iframework/translator';\r\nimport { FrameworkComponentBase, ModalService, ToastService, ModalComponent, DualComponentOptions } from '@iframework/forms';\r\nimport { IManageService, ActionItem } from './models';\r\nimport { NameValueOptionItem } from '@iframework/core';\r\n\r\nconst RESULTS_FOUND = `\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <label style=\"font-weight: 300;text-align:right;color: #a9a9a9;\">{{translator[\"RESULTFOUND\"]}}  {{this.totalSize}}</label>  \r\n        </div>\r\n    </div>`;\r\n@Component({\r\n    selector: 'is-manage',\r\n    template: `\r\n    <is-modal #columnsmodal=\"isModal\" preset=\"Close\" cancelLabel=\"Close\" size=\"small\"> \r\n        <is-dual [options]=\"columnOptions\" name=\"columnsActive\"  (assign)=\"columnsAssign($event)\" (unassign)=\"columnsUnAssign($event)\"\r\n        (assignAll)=\"columnsAssign($event)\" (unassignAll)=\"columnsUnAssign($event)\"></is-dual>                           \r\n    </is-modal>\r\n    <div *ngIf=\"showToolbar\">\r\n        <is-managetoolbar [id]=\"manageService.id\" [actionItems]=\"actionItems\" [title]=\"title\" [visibleColumns]=\"visibleColumns\" [columns]=\"columns\" [addRoute]=\"addRoute\" [gridAction]=\"gridAction\"></is-managetoolbar>\r\n    </div>` +\r\n        RESULTS_FOUND +\r\n        `<div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <ag-grid-angular #agGrid style=\"height: 622px;width: 100%\" class=\"ag-iSales\" [gridOptions]=\"gridOptions\" [columnDefs]=\"columnDefs\" \r\n                (columnVisible)=\"onColumnVisible($event)\" (columnMoved)=\"onColumnMoved($event)\" (cellValueChanged)=\"onCellValueChanged($event)\" (rowSelected)=\"onRowSelected($event)\"\r\n                (rowValueChanged)=\"onRowValueChanged($event)\" (columnRowGroupChanged)=\"onColumnVisible($event)\" (dragStarted)=\"onDragStarted($event)\" (dragStopped)=\"onDragStopped($event)\">\r\n            </ag-grid-angular>\r\n        </div>\r\n    </div>\r\n\t` + RESULTS_FOUND,\r\n    exportAs: 'isManage'\r\n})\r\nexport class ManageComponent extends FrameworkComponentBase implements OnInit, AfterViewInit {\r\n\r\n    public gridOptions: GridOptions;\r\n    public columnDefs: ColDef[] = [];\r\n\r\n    public addRoute: string;\r\n    public gridAction: boolean;\r\n    public isMobile: boolean;\r\n    public visibleColumns: string[] = [];\r\n    public columns: any[] = [];\r\n    private _rowProps: { valid: boolean; dirty: boolean }[] = [];\r\n    private _isMoving: boolean;\r\n    private _element: HTMLElement;\r\n    private _nodes: RowNode[] = [];\r\n    private _movedColumn: Column;\r\n    private _columnState: any[];\r\n    public resultsFound: number;\r\n    public totalSize: any;\r\n    public IsAll: boolean;\r\n    public columnOptions: DualComponentOptions = {\r\n        id: \"columns\",\r\n        name: this.translator[\"COLUMNS\"],\r\n        availableLabel: this.translator[\"UNASSIGNED_COLUMNS\"],\r\n        assignedLabel: this.translator[\"ASSIGNED_COLUMNS\"],\r\n        displayFilter: true,\r\n        showPrimary: false,\r\n        showOptions: true,\r\n        items: []\r\n    };\r\n\r\n    @ViewChild('columnsmodal') columnsmodal: ModalComponent;\r\n    @Input() manageService: IManageService;\r\n    @Input() actionItems: ActionItem[];\r\n    @Input() pkFields: string[] = [];\r\n    @Input() title: string = \"\";\r\n    @Input() showToolbar: boolean = true;\r\n    @Input() autoResizeColumns: boolean = true;\r\n    @Output() cellValueChanged = new EventEmitter();\r\n    @Output() rowSelected = new EventEmitter();\r\n    @Output() modelUpdated = new EventEmitter();\r\n    @Output() rowsLoaded = new EventEmitter();\r\n    @Output() rowDeleted = new EventEmitter();\r\n    @Output() rowValueChanged = new EventEmitter();\r\n\r\n    constructor(translatorService: TranslatorService, private _router: Router, private _elementRef: ElementRef,\r\n        private _modalService: ModalService, private _toastService: ToastService) {\r\n        super(translatorService);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.isMobile = window.isMobile();\r\n        this.createColumnDefs();\r\n        let item = this.columnDefs.find(x => !!x.enableRowGroup);\r\n        this.initGridOptions(!!item);\r\n        this.get();\r\n        this._element = this._elementRef.nativeElement;\r\n        (this._element.children[0] as any).onresize = this.onResize.bind(this);\r\n        this.columnOptions.items = this.getItems();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.addRoute = this.manageService.addRoute;\r\n        this.gridAction = this.manageService.gridAction;\r\n    }\r\n\r\n    public getItems() {\r\n        let state = this.manageService.dataColumns;\r\n        let item: NameValueOptionItem[] = [];\r\n        state.forEach((y: any) => {\r\n            if (y.hide === false || y.hide === undefined) {\r\n                item.push({ name: y.headerName, value: y.field, selected: true, itemIndex: 0 });\r\n\r\n            } else {\r\n                item.push({ name: y.headerName, value: y.field, selected: false, itemIndex: 0 });\r\n            }\r\n        });\r\n        item.sort((a: any, b: any) => {\r\n            return a.name < b.name ? -1 : 1;\r\n        });\r\n        return item;\r\n    }\r\n\r\n    private getRowClass(params: any) {\r\n        this.refreshRowCount();\r\n        return this._rowProps && this._rowProps[params.node.rowIndex] && !this._rowProps[params.node.rowIndex].valid ? \"row-invalid\" : \"\";\r\n    }\r\n\r\n    public RowValidatorFn: (row: any) => boolean;\r\n\r\n    private validateRow(rowIndex: number): boolean {\r\n        let valid: boolean = true;\r\n        for (let col of this.manageService.dataColumns) {\r\n            let id = col.colId || col.field || \"\";\r\n            if (col.required && !(<any>this.gridOptions.rowData)[rowIndex][id]) {\r\n                valid = false;\r\n                break;\r\n            }\r\n        }\r\n        if (this.RowValidatorFn && !this.RowValidatorFn((<any>this.gridOptions.rowData)[rowIndex])) {\r\n            valid = false;\r\n        }\r\n        this._rowProps[rowIndex].valid = valid;\r\n        console.log(this._rowProps);\r\n        return valid;\r\n    }\r\n\r\n    private refreshRowCount() {\r\n        let filteredrowcount = (this.gridOptions.api && (<InMemoryRowModel>this.gridOptions.api.getModel()).getRowCount());\r\n        this.totalSize = filteredrowcount;\r\n    }\r\n\r\n    private initGridOptions(showGrouping: boolean) {\r\n        this.gridOptions = {\r\n            //editType: 'fullRow',\r\n            getRowClass: this.getRowClass.bind(this),\r\n            rowSelection: 'multiple',\r\n            suppressCellSelection: false,\r\n            enableColResize: true,\r\n            enableSorting: true,\r\n            enableFilter: true,\r\n            enableRangeSelection: true,\r\n            groupUseEntireRow: !showGrouping,\r\n            showToolPanel: false,\r\n            rowGroupPanelShow: this.isMobile || !showGrouping ? 'never' : 'always',\r\n            autoGroupColumnDef: { cellRenderer: 'group' },\r\n            overlayLoadingTemplate: '<i class=\"fa fa-spinner fa-spin fa-3x\" style=\"color: #69be28\"></i>',\r\n            suppressContextMenu: true,\r\n            singleClickEdit: true,\r\n            suppressAggFuncInHeader: true,\r\n            // suppressScrollOnNewData: false,\r\n            onFilterChanged: () => {\r\n                this.refreshRowCount();\r\n            },\r\n            headerHeight: this.isMobile ? 0 : 39,\r\n            rowHeight: this.isMobile ? 80 : 49,\r\n            icons: {\r\n                filter: '<i class=\"is-icon is-icon-va is-filter\"/>',\r\n                sortAscending: '<i class=\"is-icon is-icon-va is-arrow-long-up\"/>',\r\n                sortDescending: '<i class=\"is-icon is-icon-va is-arrow-long-down\"/>',\r\n                groupExpanded: '<i class=\"is-icon is-icon-va is-caret-down\"/>',\r\n                groupContracted: '<i class=\"is-icon is-icon-va is-caret-right\"/>',\r\n                columnGroupOpened: '<i class=\"is-icon is-icon-va is-chevron-down\"/>',\r\n                columnGroupClosed: '<i class=\"is-icon is-icon-va is-chevron-up\"/>',\r\n                rowModelType: 'pagination'\r\n            }\r\n        };\r\n        this.gridOptions.onModelUpdated = (e: any) => {\r\n            this._nodes = <RowNode[]>(this.gridOptions.api && this.gridOptions.api.getRenderedNodes());\r\n            this.modelUpdated.emit(this._nodes);\r\n        };\r\n    }\r\n\r\n    public get(): void {\r\n        this.manageService.get(this.manageService.listCriteria).subscribe((x: any) => {\r\n            if (!this.gridOptions.api) { return; }\r\n            this.gridOptions.rowData = x;\r\n            this.totalSize = x.length;\r\n            this.gridOptions.api.setRowData(<any[]>this.gridOptions.rowData);\r\n            if (this.autoResizeColumns) {\r\n                this.sizeToFit();\r\n            }\r\n            if (this.gridOptions.rowData) {\r\n                for (let i = 0; i < this.gridOptions.rowData.length; i++) { this._rowProps[i] = { dirty: false, valid: true }; }\r\n                this.rowsLoaded.emit(this.gridOptions.rowData.length);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public addRows(numRows: number = 1): void {\r\n        let items: any[] = [];\r\n        for (let i = 0; i < numRows; i++) {\r\n            items.push({});\r\n        }\r\n        this.gridOptions.api && this.gridOptions.api.addItems(items, false);\r\n        this.gridOptions.api && this.gridOptions.api.setFilterModel(null);\r\n        for (let i = 0; i < numRows; i++) {\r\n            this._rowProps.push({ dirty: false, valid: true });\r\n            this.scrollDown();\r\n        }\r\n    }\r\n\r\n    public scrollDown() {\r\n        this.gridOptions.api && this.gridOptions.api.setInfiniteRowCount(this.gridOptions.api.paginationGetRowCount() + 1, false);\r\n        this.gridOptions.api && this.gridOptions.api.ensureIndexVisible(this.gridOptions.api.paginationGetRowCount() - 1);\r\n    }\r\n\r\n    public showOverLay(): void {\r\n        this.gridOptions.api && this.gridOptions.api.showLoadingOverlay();\r\n    }\r\n\r\n    public startEditingCell(params: { rowIndex: number; colKey: string; keyPress?: number; charPress?: string; }) {\r\n        this.gridOptions.api && this.gridOptions.api.startEditingCell(params);\r\n    }\r\n\r\n    public setFocusedCell(rowIndex: number, colID: string, floating?: string) {\r\n        this.gridOptions.api && this.gridOptions.api.setFocusedCell(rowIndex, colID, floating);\r\n    }\r\n\r\n    public refresh(): void {\r\n        this.get();\r\n    }\r\n\r\n    public markAsDirty(rowIndex: number) {\r\n        if (this._rowProps.elementAt(rowIndex)) {\r\n            this._rowProps[rowIndex].dirty = true;\r\n        }\r\n    }\r\n\r\n    public markAsClean(rowIndex: number) {\r\n        if (this._rowProps.elementAt(rowIndex)) {\r\n            this._rowProps[rowIndex].dirty = false;\r\n        }\r\n    }\r\n\r\n    public markAsValid(rowIndex: number) {\r\n        if (this._rowProps.elementAt(rowIndex)) {\r\n            this._rowProps[rowIndex].valid = true;\r\n        }\r\n    }\r\n\r\n    public markAsInvalid(rowIndex: number) {\r\n        if (this._rowProps.elementAt(rowIndex)) {\r\n            this._rowProps[rowIndex].valid = false;\r\n        }\r\n    }\r\n\r\n    public isValid(rowIndex: number): boolean {\r\n        let item = this._rowProps.elementAt<{ valid: boolean; dirty: boolean }>(rowIndex);\r\n        return item ? item.valid : false;\r\n    }\r\n\r\n    public isDirty(rowIndex: number): boolean {\r\n        let item = this._rowProps.elementAt<{ valid: boolean; dirty: boolean }>(rowIndex);\r\n        return item ? item.dirty : false;\r\n    }\r\n\r\n    public hasInvalidRows(): boolean {\r\n        return this._rowProps.findIndex(x => !x.valid) != -1;\r\n    }\r\n\r\n    public getSelectedRow(): RowNode {\r\n        let nodes = <RowNode[]>(this.gridOptions.api && this.gridOptions.api.getSelectedNodes());\r\n        return !Array.isEmpty(nodes) ? nodes[0] : <any>null;\r\n    }\r\n\r\n    private createColumnDefs() {\r\n        let cellRendererFn = function (params: any): any { return null; };\r\n        this.manageService.dataColumns.forEach(dataColumn => {\r\n            let id = dataColumn.colId || dataColumn.field || \"\";\r\n            let field = dataColumn.field || dataColumn.colId;\r\n            this.columnDefs.push({\r\n                colId: id,\r\n                field: field,\r\n                sort: dataColumn.sort,\r\n                rowGroupIndex: dataColumn.rowGroupIndex,\r\n                pivotIndex: dataColumn.pivotIndex,\r\n                headerName: dataColumn.headerName,\r\n                width: dataColumn.width,\r\n                filter: dataColumn.filter,\r\n                editable: dataColumn.editable,\r\n                suppressMenu: dataColumn.suppressMenu,\r\n                suppressSorting: dataColumn.suppressSorting,\r\n                suppressMovable: dataColumn.suppressMovable,\r\n                suppressFilter: dataColumn.suppressFilter,\r\n                suppressResize: dataColumn.suppressResize,\r\n                enableRowGroup: dataColumn.enableRowGroup,\r\n                filterParams: dataColumn.filterParams,\r\n                cellRendererFramework: dataColumn.cellRendererFramework,\r\n                cellStyle: dataColumn.cellStyle,\r\n                headerClass: dataColumn.headerClass,\r\n                cellClass: dataColumn.cellClass,\r\n                pinned: dataColumn.pinned,\r\n                onCellClicked: this.isMobile ? this.editClick.bind(this) : dataColumn.onCellClicked,\r\n                cellRenderer: dataColumn.cellRenderer,\r\n                cellEditorFramework: dataColumn.cellEditorFramework,\r\n                hide: dataColumn.hide,\r\n                valueGetter: dataColumn.valueGetter,\r\n                aggFunc: dataColumn.aggFunc,\r\n                allowedAggFuncs: dataColumn.allowedAggFuncs,\r\n                menuTabs: ['filterMenuTab']\r\n\r\n            });\r\n            if (!dataColumn.hide) {\r\n                this.visibleColumns.push(id);\r\n            }\r\n            this.columns.push({ field: id, headerName: dataColumn.headerName });\r\n        });\r\n        this.manageService.rowActions && this.manageService.rowActions.forEach(managerAction => {\r\n            this.columnDefs.push({\r\n                headerName: '', field: this.manageService.id, maxWidth: this.isMobile ? 25 : 50,\r\n                onCellClicked: managerAction == \"update\" ? this.editClick.bind(this) : this.deleteClick.bind(this),\r\n                cellClass: managerAction == \"update\" ? \"is-icon is-icon-va is-pencil clickable\" : \"is-icon is-icon-va is-close clickable\",\r\n                headerClass: \"ag-header-cell-action\",\r\n                cellRenderer: cellRendererFn,\r\n                suppressMenu: true, suppressSorting: true, suppressMovable: true, suppressResize: true, enableRowGroup: false, enableValue: false, enablePivot: false,\r\n                pinned: \"right\" //,toolPanelSuppressValues: true\r\n            });\r\n        });\r\n    }\r\n\r\n    private editClick(params: any) {\r\n        if (this.manageService.editRoute.indexOf(\"http\") == 0) {\r\n            window.location.href = String.format(this.manageService.editRoute, this.isMobile ? params.data[this.manageService.id] : params.value);\r\n        }\r\n        else {\r\n            this._router.navigate([this.manageService.editRoute, this.isMobile ? params.data[this.manageService.id] : params.value]);\r\n        }\r\n    }\r\n\r\n    private removeItem(params: any) {\r\n        this.gridOptions.api && this.gridOptions.api.removeItems([params.node], false);\r\n        this._rowProps.splice(params.node.rowIndex, 1);\r\n        this.rowDeleted.emit(params.node.rowIndex);\r\n        this.refreshRowCount();\r\n        // this.gridOptions.api && this.gridOptions.api.refreshRows([params.node]);\r\n        this.gridOptions.api && this.gridOptions.api.setFilterModel(null);\r\n        this._toastService.success(\"The record has been successfully deleted.\");\r\n    }\r\n\r\n    private deleteClick(params: any) {\r\n        let args: any[] = [];\r\n        if (this.pkFields && this.pkFields.length != 0) {\r\n            for (let field of this.pkFields) {\r\n                args.push(params.data[field]);\r\n            }\r\n        }\r\n        else {\r\n            args.push(params.value);\r\n        }\r\n        this._modalService.confirm(this.translator[\"DELETECONFIRM\"]).then((result: boolean) => {\r\n            if (!result) { return; }\r\n            if (args && args.length != 0) {\r\n                (this.manageService.delete(...args) as Observable<any>).subscribe(x => { this.removeItem(params); },\r\n                    (err) => {\r\n                        if (err.header.status == 403) {\r\n                            this._toastService.error(this.translator[\"NOTIFIERAUTHORIZATION\"]);\r\n                        }\r\n                        if (err.header.status == 409) {\r\n                            this._toastService.error(this.translator[\"NOTIFIERCANNOTDELETE\"]);\r\n                        }\r\n                        if (err.header.status == -600) {\r\n                            return this._toastService.error(err.header.message);\r\n                        }\r\n                    });\r\n            }\r\n            else {\r\n                this.removeItem(params);\r\n            }\r\n        });\r\n    }\r\n\r\n    @HostListener('window:resize', ['$event'])\r\n    private onResize(e: Event) {\r\n        setTimeout(() => {\r\n            if (this.autoResizeColumns) {\r\n                this.sizeToFit();\r\n            }\r\n        }, 10);\r\n    }\r\n\r\n    public sizeToFit() {\r\n        let ids: string[] = [];\r\n        this.columnDefs.forEach(column => {\r\n            ids.push(column.field || \"\");\r\n        });\r\n        this.gridOptions.columnApi && this.gridOptions.columnApi.autoSizeColumns(ids);\r\n        this.gridOptions.api && this.gridOptions.api.sizeColumnsToFit();\r\n    }\r\n\r\n    public columnsAssign(e: any) {\r\n        if (!Array.isEmpty(e)) {\r\n            e.forEach((y: any) => {\r\n                let state: any = this.gridOptions.columnApi && this.gridOptions.columnApi.getColumnState().find(x => x.colId === y);\r\n                this.gridOptions.columnApi && this.gridOptions.columnApi.setColumnVisible(y, state.hide);\r\n                this.updateColumnVisibility();\r\n            });\r\n            this.sizeToFit();\r\n        }\r\n    }\r\n\r\n    public columnsUnAssign(e: any) {\r\n        if (!Array.isEmpty(e)) {\r\n            e.forEach((y: any) => {\r\n                let state: any = this.gridOptions.columnApi && this.gridOptions.columnApi.getColumnState().find(x => x.colId === y);\r\n                this.gridOptions.columnApi && this.gridOptions.columnApi.setColumnVisible(y, state.hide);\r\n                this.updateColumnVisibility();\r\n            });\r\n            this.sizeToFit();\r\n        }\r\n    }\r\n\r\n    public updateColumnVisibility() {\r\n        this.columns = [];\r\n        this.visibleColumns = [];\r\n        this.gridOptions.columnApi && this.gridOptions.columnApi.getColumnState().forEach(element => {\r\n            let id = element.colId;\r\n            if (!element.hide) {\r\n                this.visibleColumns.push(element.colId);\r\n            }\r\n            let column = this.columnDefs.find(x => x.colId == id);\r\n            if (column) { this.columns.push({ field: id, headerName: column.headerName }); }\r\n        });\r\n    }\r\n\r\n    public onColumnMoved(e: any) {\r\n        this._isMoving = true;\r\n        this._movedColumn = e.column;\r\n        this.updateColumnVisibility();\r\n        this._isMoving = false;\r\n    }\r\n\r\n    public onColumnVisible(e: any) {\r\n        this._isMoving = false;\r\n        this.updateColumnVisibility();\r\n        if (this.autoResizeColumns) {\r\n            this.sizeToFit();\r\n        }\r\n    }\r\n\r\n    public selectRow(rowIndex: number) {\r\n        if (this._nodes[rowIndex]) { this._nodes[rowIndex].setSelected(true, true); }\r\n    }\r\n\r\n    public onCellValueChanged(e: any) {\r\n        this.cellValueChanged.emit(e);\r\n    }\r\n\r\n    public onRowSelected(e: { node: RowNode }) {\r\n        if (!e.node.isSelected() && this.isDirty(e.node.rowIndex)) {\r\n            this.validateRow(e.node.rowIndex);\r\n        }\r\n        this.rowSelected.emit(e);\r\n    }\r\n\r\n    public onRowValueChanged(e: any) {\r\n        this.rowValueChanged.emit(e);\r\n    }\r\n\r\n    public onDragStopped(e: any) {\r\n        if (!this._movedColumn) { return; }\r\n        let state: any[] = <any[]>(this.gridOptions.columnApi && this.gridOptions.columnApi.getColumnState());\r\n        let colID = this._movedColumn.getColId();\r\n        let pinnedIndex = state.findIndex(x => x.pinned == \"right\" && x.colId != colID);\r\n        if (pinnedIndex == -1) {\r\n            this.refreshRowCount();\r\n            return;\r\n\r\n        }\r\n        let movedIndex = state.findIndex(x => x.colId == colID);\r\n        if (movedIndex >= pinnedIndex || state.find(x => x.colId == colID).pinned == \"right\") {\r\n            this.gridOptions.columnApi && this.gridOptions.columnApi.setColumnState(this._columnState);\r\n        }\r\n        this._movedColumn = <any>null;\r\n    }\r\n\r\n    public onDragStarted(e: any) {\r\n        this._columnState = <any[]>(this.gridOptions.columnApi && this.gridOptions.columnApi.getColumnState());\r\n    }\r\n\r\n    public setRowData(data: any[]) {\r\n        this.gridOptions.rowData = [];\r\n        this.gridOptions.rowData = data;\r\n        if (this.gridOptions.api) {\r\n            this.gridOptions.api.setRowData(data);\r\n        }\r\n        this.refreshRowCount();\r\n        if (this.autoResizeColumns) {\r\n            this.sizeToFit();\r\n        }\r\n    }\r\n\r\n    public get rows(): any[] | undefined {\r\n        return this.gridOptions.rowData;\r\n    }\r\n\r\n    @HostBinding('style.width')\r\n    public get wrapperWidth() {\r\n        return \"100%\";\r\n    }\r\n}"]}