{"version":3,"file":"http.service.js","sourceRoot":"","sources":["../../../../modules/http/src/http.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAClD,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AAGzC,OAAO,uBAAuB,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,gBAAgB,EAAE,MAAM,kBAAkB,CAAC;AAC9D,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAC/C,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AACnD,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,iBAAiB,EAAE,MAAM,iBAAiB,CAAC;AAE7E,OAAO,EAAE,cAAc,EAAE,MAAM,cAAc,CAAC;;IAO7C,qBAAoB,IAAgB,EAAU,MAAc;QAAxC,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAC3D,IAAI,CAAC,QAAQ,GAAG,iBAAiB,EAAE,CAAC;KACpC;IAEM,mCAAa,GAApB,UAAqB,OAAoB,EAAE,QAAgB,EAAE,cAAsB;QAClF,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;YACrC,OAAO,CAAC,OAAO,CAAC,cAAc,GAAG,cAAc,CAAC;SAChD;QACD,IAAI,UAAU,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC7G,MAAM,CAAC,IAAI,cAAc,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KACnD;IAEM,0BAAI,GAAX,UAAY,QAAgB,EAAE,cAAsB;QACnD,IAAI,OAAO,GAAG,UAAU,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,cAAc,CAAC,CAAC;QACtE,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,QAAQ,EAAE,cAAc,CAAC,CAAC;KAC7D;IAEM,yBAAG,GAAV,UAAW,GAAW,EAAE,OAAwB,EAAE,IAAoB;QAApB,qBAAA,EAAA,WAAoB;QACrE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACV,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,KAAK,GAAG,gBAAgB,EAAE,OAAO,CAAC,CAAC;SAC9D;QACD,IAAI,CAAC,CAAC;YACL,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;SACnC;KACD;IAEM,oCAAc,GAArB;QACC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACjC;;gBAjCD,UAAU;;;gBAZF,UAAU;gBACV,MAAM;;sBAFf;;SAca,WAAW","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subscriber } from 'rxjs/Subscriber';\r\nimport 'rxjs/add/operator/map';\r\nimport { getToken, IS_BUILD_VERSION } from '@iframework/core';\r\nimport { getApiUrl } from '@iframework/config';\r\nimport { ObservableHttp } from './observable-http';\r\nimport { getRequest, mapResponse, getRequestOptions } from './request-utils';\r\nimport { RequestJSON, RequestOptions, GeoLocationItem } from './models';\r\nimport { getGeoLocation } from './http-utils';\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n\r\n\tprivate _options: RequestOptions;\r\n\r\n\tconstructor(private http: HttpClient, private router: Router) {\r\n\t\tthis._options = getRequestOptions();\r\n\t}\r\n\r\n\tpublic postByRequest(request: RequestJSON, endPoint: string, requestDetails: Object): ObservableHttp {\r\n\t\tif (!request.request.requestDetails) {\r\n\t\t\trequest.request.requestDetails = requestDetails;\r\n\t\t}\r\n\t\tlet observable = mapResponse(this.http.post(getApiUrl() + endPoint, JSON.stringify(request), this._options));\r\n\t\treturn new ObservableHttp(observable, this.router);\r\n\t}\r\n\r\n\tpublic post(endPoint: string, requestDetails: Object): ObservableHttp {\r\n\t\tlet request = getRequest(\"token\", \"\", \"\", getToken(), requestDetails);\r\n\t\treturn this.postByRequest(request, endPoint, requestDetails);\r\n\t}\r\n\r\n\tpublic get(url: string, options?: RequestOptions, json: boolean = true): Observable<any> {\r\n\t\tif (json) {\r\n\t\t\treturn this.http.get(url + \"?v=\" + IS_BUILD_VERSION, options);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.http.get(url, options);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getGeoLocation(): Observable<GeoLocationItem> {\r\n\t\treturn getGeoLocation(this.http);\r\n\t}\r\n}"]}