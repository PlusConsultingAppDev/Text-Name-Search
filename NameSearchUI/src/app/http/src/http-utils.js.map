{"version":3,"file":"http-utils.js","sourceRoot":"","sources":["../../../../modules/http/src/http-utils.ts"],"names":[],"mappings":"AAKA,IAAM,MAAM,GAAG,MAAM,CAAC;AAEtB,MAAM,iBAAiB,KAAqB;IAC3C,IAAI,MAAM,GAA6B,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC;IACnE,IAAI,GAAG,GAAW,EAAE,CAAC;IACrB,MAAM,CAAC,OAAO,CAAC,UAAA,IAAI;QAClB,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;KAC3D,CAAC,CAAC;IACH,MAAM,CAAC,GAAG,CAAC;CACX;AAED,MAAM,yBAAyB,IAAgB;IAC9C,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,GAAG,CAAC,UAAC,CAAM;QACpD,IAAI,IAAI,GAAoB;YAC3B,IAAI,EAAE,CAAC,CAAC,IAAI;YACZ,WAAW,EAAW,CAAC,CAAC,YAAa,CAAC,WAAW,EAAE;YACnD,WAAW,EAAE,CAAC,CAAC,YAAY;YAC3B,EAAE,EAAE,CAAC,CAAC,EAAE;YACR,QAAQ,EAAE,CAAC,CAAC,QAAQ;YACpB,SAAS,EAAE,CAAC,CAAC,SAAS;YACtB,UAAU,EAAE,CAAC,CAAC,WAAW;YACzB,UAAU,EAAE,CAAC,CAAC,MAAM;YACpB,QAAQ,EAAE,CAAC,CAAC,SAAS;YACrB,OAAO,EAAE,CAAC,CAAC,MAAM;SACjB,CAAC;QACF,MAAM,CAAC,IAAI,CAAC;KACZ,CAAC,CAAC;CACH;AAED,MAAM;IACL,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;CAC1E;AAED,MAAM,mBAAmB,KAAa;IACrC,MAAM,CAAC,eAAe,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;CACtC;AAED,MAAM;IACL,MAAM,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;CACjC","sourcesContent":["import { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { GeoLocationItem } from './models';\r\n\r\nconst VR_KEY = \"isVr\";\r\n\r\nexport function getUrl(route: ActivatedRoute): string {\r\n\tlet routes: ActivatedRouteSnapshot[] = route.snapshot.pathFromRoot;\r\n\tlet url: string = \"\";\r\n\troutes.forEach(item => {\r\n\t\turl += (item.url.length > 0 ? \"/\" + item.url[0].path : \"\");\r\n\t});\r\n\treturn url;\r\n}\r\n\r\nexport function getGeoLocation(http: HttpClient): Observable<GeoLocationItem> {\r\n\treturn http.get(\"https://api.ipdata.co/\").map((x: any) => {\r\n\t\tlet item: GeoLocationItem = {\r\n\t\t\tcity: x.city,\r\n\t\t\tcountryCode: (<string>x.country_code).toLowerCase(),\r\n\t\t\tcountryName: x.country_name,\r\n\t\t\tip: x.ip,\r\n\t\t\tlatitude: x.latitude,\r\n\t\t\tlongitude: x.longitude,\r\n\t\t\tregionCode: x.region_code,\r\n\t\t\tregionName: x.region,\r\n\t\t\ttimeZone: x.time_zone,\r\n\t\t\tzipcode: x.postal\r\n\t\t};\r\n\t\treturn item;\r\n\t});\r\n}\r\n\r\nexport function getVRoot() {\r\n\treturn window.getParameterByName(\"_vr\") || window.getSessionParam(VR_KEY);\r\n}\r\n\r\nexport function setVRoot(vRoot: string) {\r\n\twindow.setSessionParam(VR_KEY, vRoot);\r\n}\r\n\r\nexport function clearVRoot() {\r\n\twindow.clearSessionParam(VR_KEY);\r\n}\r\n"]}